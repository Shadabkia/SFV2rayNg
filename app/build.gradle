plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

Properties props = new Properties()
props.load(new FileInputStream(new File('local.properties')))

android {
    signingConfigs {
        release {
            storeFile file('/Users/hamidreza/Downloads/apps/v2rayNG-master/V2rayNG/app/ShoppersBlissKeyStore.jks')
            storePassword 'Bliss.1234'
            keyAlias 'ShoppersBliss'
            keyPassword 'Bliss.1234'
        }
    }
    compileSdkVersion Integer.parseInt("$compileSdkVer")
    buildToolsVersion "$buildToolsVer"

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    defaultConfig {
        applicationId "com.safenet.service"
        minSdkVersion 21
        targetSdkVersion Integer.parseInt("$targetSdkVer")
        multiDexEnabled true
        versionCode 501
//        versionName1 "1.7.23"
        versionName "5.0.1"
    }

    if (props["sign"]) {
        signingConfigs {
            release {
                storeFile file('ShoppersBlissKeyStore.jks')
                storePassword 'Bliss.1234'
                keyAlias 'ShoppersBliss'
                keyPassword 'Bliss.1234'
            }
            debug {
                storeFile file('ShoppersBlissKeyStore.jks')
                storePassword 'Bliss.1234'
                keyAlias 'ShoppersBliss'
                keyPassword 'Bliss.1234'
            }
        }
    }

    buildTypes {
        release {
            buildConfigField "String", "BASE_URL", '"http://net.safenetvpn.cf:3028/api/app/"'
            minifyEnabled false
            debuggable = true
            jniDebuggable = false
            shrinkResources = false
            if (props["sign"]) {
                signingConfig signingConfigs.release
            }
//            ndk.abiFilters 'x86', 'x86_64', 'armeabi-v7a', 'arm64-v8a'
//            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            buildConfigField "String", "BASE_URL", '"http://net.safenetvpn.cf:3028/api/app/"'
            debuggable = true
            jniDebuggable = true
            minifyEnabled false
            zipAlignEnabled false
            shrinkResources false
            if (props["sign"]) {
                signingConfig signingConfigs.release
            }
//            ndk.abiFilters 'x86', 'x86_64', 'armeabi-v7a', 'arm64-v8a'
        }
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
            java.srcDirs += 'src/main/kotlin'
        }
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17
    }

    splits {
        abi {
            enable true
            reset()
//            include 'x86', 'x86_64', 'armeabi-v7a', 'arm64-v8a' //select ABIs to build APKs for
            universalApk true //generate an additional APK that contains all the ABIs
        }
    }

    // map for the version code
    project.ext.versionCodes = ['armeabi-v7a': 1, 'arm64-v8a': 2, 'x86': 3, 'x86_64': 4]

    android.applicationVariants.all { variant ->
        // assign different version code for each output
        variant.outputs.each { output ->
            output.outputFileName = "SafeNet_Android_" + variant.versionName + ".apk"

                output.versionCodeOverride =
                    project.ext.versionCodes.get(output.getFilter(com.android.build.OutputFile.ABI), 0) *
                            1000000 + android.defaultConfig.versionCode
        }
    }

    buildFeatures {
        viewBinding true
    }
    namespace 'com.safenet.service'
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.aar', '*.jar'], exclude: [])
    testImplementation 'junit:junit:4.13.2'

    // Androidx
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.9.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.preference:preference-ktx:1.2.0'
    implementation 'androidx.recyclerview:recyclerview:1.3.0'
    implementation 'androidx.fragment:fragment-ktx:1.5.7'
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'androidx.viewpager2:viewpager2:1.1.0-beta02'

    // Androidx ktx
    implementation 'androidx.activity:activity-ktx:1.6.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.6.1'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.6.1'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.1'

    //kotlin
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.2"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4"

    implementation 'com.tencent:mmkv-static:1.2.12'
    implementation 'com.google.code.gson:gson:2.8.9'
    implementation 'io.reactivex:rxjava:1.3.4'
    implementation 'io.reactivex:rxandroid:1.2.1'
    implementation 'com.tbruyelle.rxpermissions:rxpermissions:0.9.4@aar'
    implementation 'me.dm7.barcodescanner:core:1.9.8'
    implementation 'me.dm7.barcodescanner:zxing:1.9.8'
    implementation 'com.github.jorgecastilloprz:fabprogresscircle:1.01@aar'
    implementation 'me.drakeet.support:toastcompat:1.1.0'
    implementation 'com.blacksquircle.ui:editorkit:2.1.1'
    implementation 'com.blacksquircle.ui:language-base:2.1.1'
    implementation 'com.blacksquircle.ui:language-json:2.1.1'

    // kotlin coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core-jvm:1.6.4'

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.okhttp3:logging-interceptor:5.0.0-alpha.2"

    // Hilt
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"

    // Datastore
    implementation "androidx.datastore:datastore-preferences:1.0.0"

    // Timber for logging
    implementation 'com.jakewharton.timber:timber:5.0.1'
}

